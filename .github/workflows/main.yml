name: Main

concurrency:
  group: "${{github.workflow}}-${{github.ref}}"
  cancel-in-progress: true

on:
  push:
    branches:
      - main
      - coverity
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: head
        bundler-cache: true
    - name: Lint config.yml
      run: bundle exec rake lint
    - name: Run Ruby tests
      run: bundle exec rake

  build-without-assertions:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: head
        bundler-cache: true
    - name: Run Ruby tests
      run: bundle exec rake compile_no_debug

  lex-ruby:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: head
        bundler-cache: true
    - name: Lex ruby/ruby
      run: bundle exec rake lex:ruby

  lex-discourse:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: head
        bundler-cache: true
    - name: Lex discourse/discourse
      run: bundle exec rake lex:discourse

  lex-top-100:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: head
        bundler-cache: true
    - name: Lex Top 100 Gems
      run: bundle exec rake lex:topgems
    - name: Parse Top 100 Gems
      run: bundle exec rake parse:topgems

  memcheck:
    runs-on: ubuntu-latest
    steps:
    - name: Install valgrind from source
      run: |
        sudo apt-get install -y libc6-dbg
        wget https://sourceware.org/pub/valgrind/valgrind-3.20.0.tar.bz2
        tar xvf valgrind-3.20.0.tar.bz2
        cd valgrind-3.20.0
        ./configure
        make
        sudo make install
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: head
        bundler-cache: true
    - name: Run Ruby tests with valgrind
      run: bundle exec rake test:valgrind

  gcc-analyzer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: head
        bundler-cache: true
    - name: Run build with gcc-analyzer enabled
      run: |
        sed -e  's/CFLAGS :=$/CFLAGS := -fanalyzer/g' -i Makefile
        bundle exec rake compile

  clang-analyzer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: head
        bundler-cache: true
    - name: Install clang-analyzer
      run: sudo apt-get install -y clang-tools
    - name: Run build with clang-analyzer
      run: |
        scan-build bundle exec rake compile 2>&1 | tee /tmp/scan_build_output.log
        grep -q 'scan-build: No bugs found.' /tmp/scan_build_output.log

  coverity:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: head
        bundler-cache: true
    - uses: vapier/coverity-scan-action@v1
      with:
        project: yarp
        email: ${{ secrets.COVERITY_SCAN_EMAIL }}
        token: ${{ secrets.COVERITY_SCAN_TOKEN }}
        command: 'bundle exec rake compile'
